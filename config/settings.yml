dor_services:
  url:  'https://dor-services-test.stanford.test'
  token: secret-token

assembly:
  root_dir:  # directories to search for content that should be acted upon by the robots
    - spec/test_input
    - spec/test_input2
  cm_file_name: contentMetadata.xml # the name of the contentMetadata file
  stub_cm_file_name: stubContentMetadata.xml # the name of the stub contentMetadata file
  overwrite_jp2: false # indicates if the jp2-create robot should overwrite an existing jp2 of the same name as the new one being created
  overwrite_dpg_jp2: false # indicates if the jp2-create robot should create a jp2 when there is a corresponding DPG style jp2
  # (e.g. oo000oo0001_00_001.tif and oo000oo0001_05_001.jp2, then a "false" setting here would NOT generate a new jp2 even though there is no filename clash)
  tmp_folder: /tmp # tmp file location for jp2-create and imagemagick

release:
  fetcher_root: http://localhost:3000/

sdr:
  local_workspace_root: /dor/workspace

preservation_catalog:
  url: 'https://example.org/prescat'
  token: 'mint-token-with-target-preservation-catalog-rake-generate-token'

fedora:
  url: ~

ssl:
  cert_file: ~
  key_file: ~
  key_pass: ~

suri:
  mint_ids: true
  id_namespace: 'druid'
  url: ~
  user: ~
  pass: ~

# Used by Dor::DigitalStacksService, Dor::PublishMetadataService, and Dor::ShelvingService
stacks:
  document_cache_host: ~
  local_workspace_root: ~
  local_stacks_root: ~

solr:
  url: ~

workflow:
  url: ~
  logfile: 'log/workflow_service.log'
  shift_age: 'weekly'

redis:
  url: ~

etd:
  workspace: ~

symphony:
  # hostname where symphony resides
  url: ~

# location where marc output will be dumped
marc_output_directory: ~

binder_dropbox:
  host: ~
  user: ~
  storage_root: ~
