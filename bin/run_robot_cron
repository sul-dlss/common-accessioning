#!/usr/bin/env ruby
# frozen_string_literal: true

# Will run one robot without using the ServiceController (no daemonization)
# It will only start a robot if it is not running already
# Should be run from the root of the robot project
# Assumes robot suite was intalled with capistrano with bundler running in deployment mode
#
# From cron
# 0 * * * * bash -l -c 'cd /path/to/robot_root && ROBOT_ENVIRONMENT=lyberservices-dev ruby ./bin/run_robot_cron EtdSubmit::SubmitMarc' > /home/deploy/crondebug.log 2>&1

require File.expand_path(File.dirname(__FILE__) + '/../config/boot')

robot_name = ARGV.shift

# See if the robot is already running.
# This list is going to detect this process.
procs_running = `ps -ef | grep #{robot_name} | grep -v 'grep' | wc -l`.strip.to_i
if procs_running > 1
  puts "#{robot_name} already running.  Skipping invocation"
  exit
end

# Instantiate the robot class and start it
puts "Trying to load #{robot_name}"
klazz = robot_name.split('::').inject(Robots::DorRepo) { |o, c| o.const_get c }
robot = klazz.new check_queued_status: false
robot.start
